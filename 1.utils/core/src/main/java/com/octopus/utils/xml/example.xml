<?xml version="1.0" encoding="utf-8"?>
<!--
    xmlid:clazz的标识，在defs中定义和clazz的关系，后续使用xmlid就可以。
    clazz:是指明该段xml的解析类
    同一层相同的tag:
        如果有"seq"属性时对应解析类中的tag+"s" List属性
        如果有"key"属性时对应解析类中的tag+"s" Map属性
    有类的属性作为xml的child配置。
    数据属性作为xml的properties配置。

    入口配置必须有id。clazz属性
    列表型为在同一个tag下有多个同tag的元素，他们id相同，有seq属性，seq值不重复为double型,列表必须初始化如List items = new ArrayList(); 列表的属性名称必须是标签名称+"s"
    Map型为在同一个tag下有多个同tag的元素，他们id相同，有key属性，key值不重复为String。类Map tagNams+"s" ; key和seq不能同时用.
    string属性放入properties中。
    有clazz的属性放入子标签中，子类标签名称必须和上级class中的属性名称一致，包括大小写。
    properties中的属性名称必须和clazz类中的一致，包括大小写；如果类中有properties属性，找不到类中的field的属性将放入properties属性中。
    入口clazz类中需要初始化设置xmlId值，表明该类解析的xml段。
    -->
<exam xmlid="i18n" clazz="com.octopus.tools.i18n.impl.I18N">
    <defs>
        <def xmlid="extends XMLObject or extends XMLDoObject" clazz="" classloader=""/>
        <def proid="concurrence" clazz="implements IObjectInitProperty or implements IObjectInvokeProperty" classloader=""/>
    </defs>

    <!-- 代理类 -->
    <handler clazz="extends XMLObject implements IMethodAddition" level="" iswaitebefore="" isnextinvoke="" targetxmlids="or targetids="/>

    <!-- 个XMLDoObject参数和XMLParameter的映射关系 -->
    <parmap xmlid=""/>

    <!-- 一个XMLDoObject配置 -->
    <item id="" xmlid="" seq="" xml="classpath:" classloader="" clazz="" key=""  parmap="{os:{env.xx.xx:xx,...}}"
          concurrence="{num:3,size:100,spl:'xx'},iswait:yes}" worktime="{crons:['0 29 11 ? * MON-SAT']}"
          jsonpar="{to:}"
            >
         <children path=""/>
    </item>

    <logic xmlid="xmllogic">
        <do seq="0" action="actions[httpclient]" jsonpar="{parse:'SingleParse',method:'GET',url:'http://hq.htsc.com.cn/allstock?ram0.5547212846577168',check:'cssweb_code:\\'success\\'',charset:'UTF-8',result:'net.sf.json.JSONObject'}" desc="">
            <for collection="result.data">
                <do seq="0" action="convert.convert2" parmap="{src:'result.data.item'}" jsonpar="{formate:com.ifp.stock.ds.StockInfo}"/>
                <do seq="1" action="cells[isp.cache][stock_info]" parmap="{key:result.data.item[1],value:convert.convert2.result)"/>
            </for>
        </do>

        <do seq="1" action="cells[isp.dataoperator]" jsonpar="{db:'mysql/STOCK_DATA',where:['C_DATE<date(now,-12,day)']}"/>
        <if expression="">

        <else/>

        </if>
        <for seq="2" collection="cells[isp.cache][stock_info]">
            <do seq="0" action="actions[httpclient]" jsonpar="{parse:'SingleParse',method:'GET',url:'http://hq.htsc.com.cn/f10/[value.code]/[(value.stockType.equals('0')?'sz':'sh')]_3.txt?data=0.8176445136778057',check:'cssweb_code:\\'success\\'',charset:'UTF-8'}" desc="">
                <do seq="0" action="convert.convert2" parmap="{src:'actions[httpclient].result'}" jsonpar="{formate:com.ifp.stock.ds.StockCompany}"/>
                <do seq="1" action="cells[isp.cache][stock_company]" parmap="{key:cells[isp.cache][stock_info].item.code,value:convert.convert2.result}"/>
            </do>
        </for>
        <result return=""/>
    </logic>

</exam>